<?php

/**
 * @file
 * Islandora Solr Views Select functions.
 */

/**
 * Implements hook_views_api().
 */
function islandora_solr_views_select_views_api() {
  return array('api' => '3.0');
}

/**
 * Generate an array of values for the field $fieldname from Solr.
 *
 * @param $fieldname
 *   The fieldname.
 *
 * @return array
 *   Of values.
 */
function islandora_solr_views_get_field_values($fieldname) {
  $params = array(
    'facet' => 'true',
    'facet.field' => array($fieldname),
    'facet.mincount' => 1,
    'facet.limit' => -1,
  );
  $solr_build = new IslandoraSolrQueryProcessor();
  $solr_build->buildQuery(format_string("!fieldname:*", array(
    '!fieldname' => $fieldname,
  )), $params);
  $solr_build->solrParams = islandora_solr_remove_base_filters($solr_build->solrParams);
  $solr_build->solrParams = array_replace($solr_build->solrParams, $params);
  $solr_build->solrLimit = 0;
  $solr_build->executeQuery(FALSE);
  $values = array();
  if (isset($solr_build->islandoraSolrResult['facet_counts']['facet_fields'][$fieldname])) {
    foreach ($solr_build->islandoraSolrResult['facet_counts']['facet_fields'][$fieldname] as $value => $count) {
      if (!empty($value)) {
        $values[] = trim($value);
      }
    }
  }
  return $values;
}

/**
 * Implements hook_views_data_alter().
 */
function islandora_solr_views_select_views_data_alter(&$data) {
  $filter = 'islandora_solr_views_select_handler_filter';
  if (isset($data['islandora_solr']) && is_array($data['islandora_solr'])) {
    foreach ($data['islandora_solr'] as $fieldname => &$info) {
      if (isset($info['filter'])) {
        $info['filter']['handler'] = $filter;
      }
    }
  }
}
